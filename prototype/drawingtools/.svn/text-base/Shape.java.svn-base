/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package drawingtools;
import javax.swing.*;
/**
 *
 * @author Carmen
 */
public class Shape extends javax.swing.JFrame {

    /**
     * Creates new form Shape
     */
    public Shape() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        line = new javax.swing.JToggleButton();
        circle = new javax.swing.JToggleButton();
        rectangle = new javax.swing.JToggleButton();
        move = new javax.swing.JToggleButton();
        delete = new javax.swing.JToggleButton();

        line.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawingtools/line.png"))); // NOI18N
        line.setSelected(true);
        line.setMaximumSize(new java.awt.Dimension(55, 55));
        line.setMinimumSize(new java.awt.Dimension(55, 55));
        line.setPreferredSize(new java.awt.Dimension(55, 55));
        line.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineActionPerformed(evt);
            }
        });

        circle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawingtools/circle.png"))); // NOI18N
        circle.setMaximumSize(new java.awt.Dimension(55, 55));
        circle.setMinimumSize(new java.awt.Dimension(55, 55));
        circle.setPreferredSize(new java.awt.Dimension(55, 55));
        circle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                circleActionPerformed(evt);
            }
        });

        rectangle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawingtools/rectangle.png"))); // NOI18N
        rectangle.setMaximumSize(new java.awt.Dimension(55, 55));
        rectangle.setMinimumSize(new java.awt.Dimension(55, 55));
        rectangle.setPreferredSize(new java.awt.Dimension(55, 55));
        rectangle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectangleActionPerformed(evt);
            }
        });

        move.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawingtools/move_shape.png"))); // NOI18N
        move.setMaximumSize(new java.awt.Dimension(55, 55));
        move.setMinimumSize(new java.awt.Dimension(55, 55));
        move.setPreferredSize(new java.awt.Dimension(55, 55));
        move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moveActionPerformed(evt);
            }
        });

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawingtools/delete_shape.png"))); // NOI18N
        delete.setMaximumSize(new java.awt.Dimension(55, 55));
        delete.setMinimumSize(new java.awt.Dimension(55, 55));
        delete.setPreferredSize(new java.awt.Dimension(55, 55));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(move, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rectangle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(circle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(line, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(circle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(rectangle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(move, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineActionPerformed
        System.out.println("In Shape.lineActionPerformed.");
        if(line.isSelected())  {
            changeSelection(line);
            //System.out.println("Line is selected.");
        }
        else  {
            line.setSelected(true);
            line.updateUI();
        }
    }//GEN-LAST:event_lineActionPerformed

    private void circleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_circleActionPerformed
        System.out.println("In Shape.circleActionPerformed.");
        if(circle.isSelected())  {
            changeSelection(circle);
            //System.out.println("Circle is selected.");
        }
        else  {
            circle.setSelected(true);
            circle.updateUI();
        }
    }//GEN-LAST:event_circleActionPerformed

    private void rectangleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectangleActionPerformed
        System.out.println("In Shape.rectangelActionPerformed.");
        if(rectangle.isSelected())  {
            changeSelection(rectangle);
            //System.out.println("Rectangle is selected.");
        }
        else  {
            rectangle.setSelected(true);
            rectangle.updateUI();
        }
    }//GEN-LAST:event_rectangleActionPerformed

    private void moveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moveActionPerformed
        System.out.println("In Shape.moveActionPerformed.");
        if(move.isSelected())  {
            changeSelection(move);
            //System.out.println("Move Shape is selected.");
        }
        else  {
            move.setSelected(true);
            move.updateUI();
        }    
    }//GEN-LAST:event_moveActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        System.out.println("In Shape.deleteActionPerformed.");
        if(delete.isSelected())  {
            changeSelection(delete);
            //System.out.println("Delete Shape is selected.");
        }
        else  {
            delete.setSelected(true);
            delete.updateUI();
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void changeSelection(javax.swing.JToggleButton button)  {
        System.out.println("In Shape.chanceSelection.");
        if(!button.equals(line))  {
            line.setSelected(false);
            line.updateUI();
        }
        if(!button.equals(move))  {
            move.setSelected(false);
            move.updateUI();
        }
        if(!button.equals(rectangle))  {
            rectangle.setSelected(false);
            rectangle.updateUI();
        }
        if(!button.equals(delete))  {
            delete.setSelected(false);
            delete.updateUI();
        }
        if(!button.equals(circle))  {
            circle.setSelected(false);
            circle.updateUI();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton circle;
    private javax.swing.JToggleButton delete;
    private javax.swing.JToggleButton line;
    private javax.swing.JToggleButton move;
    private javax.swing.JToggleButton rectangle;
    // End of variables declaration//GEN-END:variables
}
