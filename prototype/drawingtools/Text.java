/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package drawingtools;
import javax.swing.*;
/**
 *
 * @author Carmen
 */
public class Text extends javax.swing.JFrame {

    /**
     * Creates new form Text
     */
    public Text() {
        initComponents();
        color = new ColorSwatch();
        color.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        font = new javax.swing.JComboBox();
        textSize = new javax.swing.JComboBox();
        textColor = new javax.swing.JButton();
        highlightText = new javax.swing.JToggleButton();

        font.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Times New Roman", "Calibiri", "Comic Sans", "Arial" }));
        font.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontActionPerformed(evt);
            }
        });

        textSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "10", "11", "12", "14", "16", "18", "20", "24", "30", "48" }));
        textSize.setSelectedIndex(3);
        textSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSizeActionPerformed(evt);
            }
        });

        textColor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawingtools/text_color.png"))); // NOI18N
        textColor.setMaximumSize(new java.awt.Dimension(55, 55));
        textColor.setMinimumSize(new java.awt.Dimension(55, 55));
        textColor.setPreferredSize(new java.awt.Dimension(55, 55));
        textColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textColorActionPerformed(evt);
            }
        });

        highlightText.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawingtools/highlight_text.png"))); // NOI18N
        highlightText.setMaximumSize(new java.awt.Dimension(55, 55));
        highlightText.setMinimumSize(new java.awt.Dimension(55, 55));
        highlightText.setPreferredSize(new java.awt.Dimension(55, 55));
        highlightText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                highlightTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(font, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(highlightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(font, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(textSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(highlightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(textColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textColorActionPerformed
        System.out.println("In Text.textColorActionPerformed.");
        color.setVisible(true);
        //System.out.print("Text");
    }//GEN-LAST:event_textColorActionPerformed

    private void fontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontActionPerformed
        System.out.println("In Text.fontActionPerformed.");
        //System.out.println("Font changed to " + font.getSelectedItem() + ".");
    }//GEN-LAST:event_fontActionPerformed

    private void textSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSizeActionPerformed
        System.out.println("In Text.textSizeActionPerformed.");
        //System.out.println("Font size changed to " + textSize.getSelectedItem() + ".");
    }//GEN-LAST:event_textSizeActionPerformed

    private void highlightTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highlightTextActionPerformed
        System.out.println("In Text.highlightTextActionPerformed.");
        if(highlightText.isSelected())  {
       //     System.out.println("Text is highlighted.");
        }
        else  {
      //      System.out.println("Text is un-highlighted.");
        }
    }//GEN-LAST:event_highlightTextActionPerformed

    private ColorSwatch color;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox font;
    private javax.swing.JToggleButton highlightText;
    private javax.swing.JButton textColor;
    private javax.swing.JComboBox textSize;
    // End of variables declaration//GEN-END:variables
}
