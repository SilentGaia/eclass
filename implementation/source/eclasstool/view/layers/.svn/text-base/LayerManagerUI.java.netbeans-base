/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eclasstool.view.layers;

import java.awt.Color;
import javax.swing.*;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import eclasstool.model.layers.*;
import eclasstool.view.drawingtools.*;
/**
 * The Class LayerManagerUI is the main frame of the EClass Layer Manager.
 *
 * @author Tammy Kong (takong@calpoly.edu)
 * @version 20jan15
 */
public class LayerManagerUI extends javax.swing.JFrame {
    private DrawingToolsUI toolbox;
    private DefaultListModel model;
    private int numberCounter;
    /**
     * Creates new form LayerManagerUI
     */
    public LayerManagerUI(DrawingToolsUI toolbox) {
    	this.toolbox = toolbox;
        initComponents();
        numberCounter = 1;
        manager = new LayersManager(toolbox);
        model = new DefaultListModel();
        layerList.setCellRenderer(new CustomListCellRenderer());
        layerList.setModel(model);
        initLayers();
    }

    /**
     * Adds the first layer to the layer manager
     */ 
    private void initLayers() {
        curLayer = manager.getCurLayer();
        //model.addElement("Layer " + numberCounter);
        model.addElement(new LayerUI(toolbox, curLayer, numberCounter));
        numberCounter++;
        layerList.setSelectedIndex(0);
        
        
        layerList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (e.getValueIsAdjusting()) {
                    //System.out.println(model.get(layerList.getSelectedIndex()) + " selected.");
                    manager.setCurLayer(layerList.getSelectedIndex());
                    curLayer = manager.getCurLayer();
                }
            }
        });
    }
   
    public LayersManager getLayersManager()  {
    	return manager;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        bkgLabel = new java.awt.Label();
        inkLabel = new java.awt.Label();
        bkgSlider = new javax.swing.JSlider();
        inkSlider = new javax.swing.JSlider();
        addLayer = new javax.swing.JButton();
        deleteLayer = new javax.swing.JButton();
        bkgValue = new javax.swing.JLabel();
        inkValue = new javax.swing.JLabel();
        layerVisibility = new javax.swing.JToggleButton();
        slidePanel = new javax.swing.JPanel();
        slideNumber = new javax.swing.JLabel();
        slideImage = new javax.swing.JPanel();
        layerScroll = new javax.swing.JScrollPane();
        layerList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(346, 293));

        buttonPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bkgLabel.setText("BKG:");

        inkLabel.setText("Ink:");

        bkgSlider.setMajorTickSpacing(20);
        bkgSlider.setPaintTicks(true);
        bkgSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                bkgSliderMouseReleased(evt);
            }
        });

        inkSlider.setMajorTickSpacing(20);
        inkSlider.setPaintTicks(true);
        inkSlider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                inkSliderMouseReleased(evt);
            }
        });
        layerVisibility.setBackground(new java.awt.Color(255, 255, 255));
	layerVisibility.setIcon(openEye);
	layerVisibility.addActionListener(new java.awt.event.ActionListener() {
	    public void actionPerformed(java.awt.event.ActionEvent evt) {
	        layerVisibilityActionPerformed(evt);
            }
	});
	
        addLayer.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("eclasstool/view/layers/addLayer.png"))); // NOI18N
        addLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLayerActionPerformed(evt);
            }
        });

        deleteLayer.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("eclasstool/view/layers/deleteLayer.png"))); // NOI18N
        deleteLayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLayerActionPerformed(evt);
            }
        });

        bkgValue.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        bkgValue.setText("50");

        inkValue.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        inkValue.setText("50");
        
	javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addComponent(layerVisibility, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addLayer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(deleteLayer, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(bkgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(bkgValue))
                    .addComponent(bkgSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(inkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inkValue))
                    .addComponent(inkSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bkgLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inkLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bkgValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inkValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(inkSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bkgSlider, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(deleteLayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addLayer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(layerVisibility, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        slideNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        slideNumber.setText("Slide 1");

        slideImage.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout slideImageLayout = new javax.swing.GroupLayout(slideImage);
        slideImage.setLayout(slideImageLayout);
        slideImageLayout.setHorizontalGroup(
            slideImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 129, Short.MAX_VALUE)
        );
        slideImageLayout.setVerticalGroup(
            slideImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout slidePanelLayout = new javax.swing.GroupLayout(slidePanel);
        slidePanel.setLayout(slidePanelLayout);
        slidePanelLayout.setHorizontalGroup(
            slidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, slidePanelLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(slideImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(slideNumber)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        slidePanelLayout.setVerticalGroup(
            slidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slidePanelLayout.createSequentialGroup()
                .addGroup(slidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(slidePanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(slideNumber))
                    .addGroup(slidePanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(slideImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15))
        );

        layerScroll.setViewportView(layerList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(slidePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(layerScroll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(slidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(215, 215, 215)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(105, Short.MAX_VALUE)
                    .addComponent(layerScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(84, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    
    /**
     * Adds a layer to the Collection of layers
     *
     * @param evt The action event when the add layer button is clicked
     */
    private void addLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLayerActionPerformed
        // TODO add your handling code here:
        //System.out.println("New layer added.");
        manager.addLayer();
        curLayer = manager.getCurLayer();
        model.addElement(new LayerUI(toolbox, curLayer, numberCounter));
        layerList.setSelectedIndex(model.size() - 1);
        numberCounter++;
        
        
    }//GEN-LAST:event_addLayerActionPerformed

    /**
     * Deletes the selected layer from the Collection of layers
     *
     * @param evt The action event when the delete button is clicked
     */ 
    private void deleteLayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLayerActionPerformed
        // TODO add your handling code here:
        if(layerList.getSelectedIndex() > -1) {
            manager.deleteLayer();
            model.removeElementAt(layerList.getSelectedIndex());
         }
        
    }//GEN-LAST:event_deleteLayerActionPerformed

    /**
     * Changes the background of the layer to a certain percentage
     *
     * @param evt The ation event when the background slider is moved
     */ 
    private void bkgSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bkgSliderMouseReleased
        // TODO add your handling code here:
        bkgValue.setText(String.valueOf(bkgSlider.getValue()));
        //System.out.println("Background slider dragged to " + bkgSlider.getValue() + ".");
        curLayer.adjustBKG(bkgSlider.getValue());
    }//GEN-LAST:event_bkgSliderMouseReleased

    /**
     *Changes the ink solidness on the layer to a certain percentage;
     * 
     * @param evt The action event when the ink slider is moved
     */
    private void inkSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inkSliderMouseReleased
        // TODO add your handling code here:
        inkValue.setText(String.valueOf(inkSlider.getValue()));
        //System.out.println("Ink slider dragged to " + inkSlider.getValue() + ".");
        curLayer.adjustInk(inkSlider.getValue());
    }//GEN-LAST:event_inkSliderMouseReleased

    /**
     * Changes the visibility of the layer
     *
     * @param evt The action event when the visibility button is clicked
     */
    private void layerVisibilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layerVisibilityActionPerformed
        // TODO add your handling code here:
        curLayer.changeVisibility();
	repaint();
    }//GEN-LAST:event_layerVisibilityActionPerformed
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addLayer;
    private java.awt.Label bkgLabel;
    private javax.swing.JSlider bkgSlider;
    private javax.swing.JLabel bkgValue;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton deleteLayer;
    private java.awt.Label inkLabel;
    private javax.swing.JSlider inkSlider;
    private javax.swing.JLabel inkValue;
    private javax.swing.JList layerList;
    private javax.swing.JScrollPane layerScroll;
    private javax.swing.JToggleButton layerVisibility;
    private javax.swing.JPanel slideImage;
    private javax.swing.JLabel slideNumber;
    private javax.swing.JPanel slidePanel;
    // End of variables declaration//GEN-END:variables

    
    /**
     * Image of open eye to display visibility of layer
     */
    final Icon openEye = new ImageIcon(getClass().getClassLoader().getResource("eclasstool/view/layers/openEye.png"));

    /**
     * Image of closed eye to display visibility of layer
     */
    final Icon closedEye = new ImageIcon(getClass().getClassLoader().getResource("eclasstool/view/layers/closedEye.png"));
    
    
    private LayersManager manager;
    private Layer curLayer;
}
