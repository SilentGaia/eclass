/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eclasstool.view.taskbar;

import eclasstool.view.chat.*;
import eclasstool.view.roster.*;
//import eclasstool.view.filemanager.*;
import eclasstool.view.presentation.*;
import eclasstool.view.layers.*;
import eclasstool.view.drawingtools.*;

import java.awt.*;

/**
 *  User interface that holds all functional
 *  features in the E-Classroom Tool.
 *
 * @author Leah Pichay (lpichay@calpoly.edu)
 */
public class TaskbarUI extends javax.swing.JFrame {

    /**
     * Creates new form TaskbarUI
     */
    public TaskbarUI() {
        initComponents();
        chatUI = new ChatUI();
        rosterUI = new RosterUI();
        //fileManagerUI = new FileManager();
        //fileManagerUI.setVisible(true);
        drawingUI = new DrawingToolsUI();
        drawingUI.setVisible(true);

        layersUI = new LayerManagerUI(drawingUI);
        lectureEditorUI = new SlideManagerUI(layersUI.getLayersManager());
        presentUI = new PresentationUI();
        //presentUI.setVisible(true);



        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

            taskbar = new javax.swing.JPanel();
            drawingtools = new javax.swing.JButton();
            slidemanager = new javax.swing.JButton();
            roster = new javax.swing.JButton();
            presentation = new javax.swing.JButton();
            //filemanager = new javax.swing.JButton();
            layermanager = new javax.swing.JButton();
            chat = new javax.swing.JButton();

            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setPreferredSize(new java.awt.Dimension(1075, 115));

            drawingtools.setText("drawing tools");
            drawingtools.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                    drawingtoolsActionPerformed(evt);
                    }
                    });

            slidemanager.setText(" lecture editor");
            slidemanager.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                    slidemanagerActionPerformed(evt);
                    }
                    });

            roster.setText("roster");
            roster.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                    rosterActionPerformed(evt);
                    }
                    });

            presentation.setText("presentation viewer");
            presentation.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                    presentationActionPerformed(evt);
                    }
                    });
            /*
               filemanager.setText("file manager");
               filemanager.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
               filemanagerActionPerformed(evt);
               }
               });
             */

            layermanager.setText("layers");
            layermanager.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                    layermanagerActionPerformed(evt);
                    }
                    });

            chat.setText("chat");
            chat.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                    chatActionPerformed(evt);
                    }
                    });

            javax.swing.GroupLayout taskbarLayout = new javax.swing.GroupLayout(taskbar);
            taskbar.setLayout(taskbarLayout);
            taskbarLayout.setHorizontalGroup(
                    taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taskbarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(drawingtools)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slidemanager)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roster)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(presentation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        //.addComponent(filemanager)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(layermanager)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chat)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    );
            taskbarLayout.setVerticalGroup(
                    taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(taskbarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(taskbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drawingtools)
                            .addComponent(slidemanager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(roster, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(presentation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            //.addComponent(filemanager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(layermanager, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(chat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(taskbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(taskbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    /**
     *  Action performed when the user presses
     *  Layer Manager button.
     *
     * @param evt Event occured when button is pressed.
     */
    private void layermanagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_layermanagerActionPerformed
        // TODO add your handling code here:
        layersUI.setVisible(true);
        layersUI.setLocationRelativeTo(this);
        layersUI.setDefaultCloseOperation(HIDE_ON_CLOSE);
        layersUI.setResizable(false);

    }//GEN-LAST:event_layermanagerActionPerformed

    /**
     *  Action performed when the user presses
     *  Drawing Tools button.
     *
     * @param evt Event occured when button is pressed.
     */
    private void drawingtoolsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawingtoolsActionPerformed
        // TODO add your handling code here:
        drawingUI.setVisible(true);
        drawingUI.setLocationRelativeTo(this);
        drawingUI.setDefaultCloseOperation(HIDE_ON_CLOSE);
        drawingUI.setResizable(false);
    }//GEN-LAST:event_drawingtoolsActionPerformed

    /**
     *  Action performed when the user presses
     *  Slide Manager button.
     *
     * @param evt Event occured when button is pressed.
     */
    private void slidemanagerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slidemanagerActionPerformed
        // TODO add your handling code here:
        lectureEditorUI.setVisible(true);
        lectureEditorUI.setLocationRelativeTo(this);
        lectureEditorUI.setDefaultCloseOperation(HIDE_ON_CLOSE);
        lectureEditorUI.setResizable(false);
    }//GEN-LAST:event_slidemanagerActionPerformed

    /**
     *  Action performed when the user presses
     *  Roster button.
     *  
     * @param evt Event occured when button is pressed.
     */
    private void rosterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rosterActionPerformed
        // TODO add your handling code here:
        rosterUI.setVisible(true);
        rosterUI.setLocationRelativeTo(this);
        rosterUI.setDefaultCloseOperation(HIDE_ON_CLOSE);
        rosterUI.setResizable(false);
    }//GEN-LAST:event_rosterActionPerformed

    /**
     *  Action performed when the user presses
     *  Presentation Viewer button.
     *
     * @param evt Event occured when button is pressed.
     */
    private void presentationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presentationActionPerformed
        // TODO add your handling code here:
        presentUI.setVisible(true);
        presentUI.setLocationRelativeTo(this);
        presentUI.setDefaultCloseOperation(HIDE_ON_CLOSE);
        presentUI.setResizable(false);
    }//GEN-LAST:event_presentationActionPerformed
    /*
       private void filemanagerActionPerformed(java.awt.event.ActionEvent evt) 
       {//GEN-FIRST:event_filemanagerActionPerformed
    // TODO add your handling code here:
    fileManagerUI.setVisible(true);
    fileManagerUI.setLocationRelativeTo(this);
    fileManagerUI.setDefaultCloseOperation(HIDE_ON_CLOSE);
    fileManagerUI.setResizable(false);
    }//GEN-LAST:event_filemanagerActionPerformed
     */

    /**
     *  Action performed when the user presses
     *  Chat button.
     *
     * @param evt Event occured when button is pressed.
     */
    private void chatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatActionPerformed
        // TODO add your handling code here:
        chatUI.setVisible(true);
        chatUI.setLocationRelativeTo(this);
        chatUI.setDefaultCloseOperation(HIDE_ON_CLOSE);
        chatUI.setResizable(false);
    }//GEN-LAST:event_chatActionPerformed

    /**
     * Graphical compnent for ChatUI.
     */
    private ChatUI chatUI;
    /**
     * Graphical component for RosterUI.
     */
    private RosterUI rosterUI;
    //private FileManager fileManagerUI;
    /**
     * Graphical component for SlideManagerUI.
     */
    private SlideManagerUI lectureEditorUI;
    /**
     * Graphical component for PresentationUI.
     */
    private PresentationUI presentUI;
    /**
     * Graphical component for LayersManagerUI.
     */
    private LayerManagerUI layersUI;
    /**
     * Graphical component for DrawingToolsUI.
     */
    private DrawingToolsUI drawingUI;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
     * Graphical icon for ChatUI.
     */
    private javax.swing.JButton chat;
    /**
     * Graphical icon for DrawingToolsUI.
     */
    private javax.swing.JButton drawingtools;
    //private javax.swing.JButton filemanager;
    /**
     * Graphical icon for LayersManagerUI.
     */
    private javax.swing.JButton layermanager;
    /**
     * Graphical icon for PresentationUI.
     */
    private javax.swing.JButton presentation;
    /**
     * Graphical icon for RosterUI.
     */
    private javax.swing.JButton roster;
    /**
     * Graphical icon for SlideManagerUI.
     */
    private javax.swing.JButton slidemanager;
    /**
     * Graphical icon for TaskbarUI.
     */
    private javax.swing.JPanel taskbar;
    // End of variables declaration//GEN-END:variables
}
